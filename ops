{"version":1,"ops":[{"type":6,"author":{"id":"8bb2e2064051e551a5dd57a858a993fc9e61081d"},"timestamp":1612475887,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0ODkzNDIwNTk="},"target":"2816502c5a2004e5b417bd9a9f926f1577bb683ea50cfc6c1812476e83ffba1b","message":"I'll use timeout as the example, but it applies to quite a few others as \nwell; that's just the one I encountered it on.\n\nI'm on Ubuntu 20.04.2, perl 05.30.0, Net::P\n\ning version 2.71 (seen in \nPing.pm) (perl and Net::Ping installed with default Ubuntu packages).\n\nSimple example:\n```\n$ cat t004.pl\n#!/usr/bin/env perl\n\nuse strict;\nuse warnings;\nuse Data::Dumper;\nuse Net::Ping;\n\n# Like tcp protocol, but with many hosts\nmy $p = Net::Ping-\u003enew({\n     proto =\u003e \"syn\",\n     timeout =\u003e 2,     # but dumping $p shows 5??\n});\nprint \"p \", Dumper ($p), \"\\n\";\n\n$ ./t004.pl\np $VAR1 = bless( {\n                  'wbits' =\u003e '',\n                  'syn' =\u003e {},\n                  'port_num' =\u003e 7,\n                  'data' =\u003e '',\n                  'device' =\u003e undef,\n                  'family' =\u003e 2,\n                  'tos' =\u003e undef,\n                  'econnrefused' =\u003e undef,\n                  'stop_time' =\u003e 0,\n                  'retrans' =\u003e '1.2',\n                  'data_size' =\u003e 0,\n                  'local_addr' =\u003e undef,\n                  'seq' =\u003e 0,\n                  'proto' =\u003e 'syn',\n                  'timeout' =\u003e 5,\n                  'proto_num' =\u003e 6,\n                  'bad' =\u003e {}\n                }, 'Net::Ping' );\n```\nNote that timeout is 5 in the Dumper output when t004.pl is run, \nalthough it was initialized to 2 in the hash passed to Net::Ping-\u003enew().\n\nThe reason this happens is that the code for new() in Ping.pm first \nchecks if $proto is a hashref, and if it is moves the possible \nparameters out of it into $self (lines 110-129).\n\nThen it goes through and applies default values to the parameter \nvariables if they are not set; $timeout is set at line 135. $timeout \nwill not be set in the case where the parameters were passed in as a \nhashref, so line 135 will set $timeout to $def_timeout (which is 5).\n\nLine 138 is:\n\n       $self-\u003e{timeout} = $timeout;\n\nAnd that will overwrite the value copied into $self from $proto up in \nlines 110-129.\n\nBunch of obvious ways to fix this. Same thing would appear to happen to \n$device and $tos just after line 138, and probably others elsewhere. It \nlooks like the change to allow a hashref to be passed in with all the \nnamed parameters didn't adequately deal with how defaults were handled \nlater in the code.","files":null},{"type":5,"author":{"id":"8bb2e2064051e551a5dd57a858a993fc9e61081d"},"timestamp":1612475845,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQyOTMyMzU1NTI="},"added":["bug"],"removed":[]}]}